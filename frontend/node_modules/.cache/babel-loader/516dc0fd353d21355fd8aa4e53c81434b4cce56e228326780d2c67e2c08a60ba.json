{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafa\\\\Desktop\\\\codigos\\\\gerenciador-de-fichas\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FormularioPersonagem from './FormularioPersonagem';\nimport DetalhePersonagem from './DetalhePersonagem';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [personagens, setPersonagens] = useState([]);\n  const [personagemSelecionado, setPersonagemSelecionado] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 1. Buscar a lista inicial de personagens\n  useEffect(() => {\n    const fetchPersonagens = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/personagens');\n        if (!response.ok) {\n          throw new Error('Não foi possível buscar os dados da API');\n        }\n        const data = await response.json();\n        setPersonagens(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPersonagens();\n  }, []); // O array vazio [] faz isso rodar só uma vez\n\n  // 2. Função para adicionar o novo personagem à lista\n  const handlePersonagemCriado = novoPersonagem => {\n    setPersonagens(prevPersonagens => [...prevPersonagens, novoPersonagem]);\n    setPersonagemSelecionado(novoPersonagem); // Seleciona o recém-criado\n  };\n\n  // 3. Renderização\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Erro: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coluna-esquerda\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section lista-personagens\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Personagens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Carregando lista...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [personagens.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nenhum personagem criado.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 46\n            }, this), personagens.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: (personagemSelecionado === null || personagemSelecionado === void 0 ? void 0 : personagemSelecionado.id) === p.id ? 'selecionado' : '',\n              onClick: () => setPersonagemSelecionado(p),\n              children: p.nome_personagem\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormularioPersonagem, {\n          onPersonagemCriado: handlePersonagemCriado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coluna-direita\",\n        children: /*#__PURE__*/_jsxDEV(DetalhePersonagem, {\n          ficha: personagemSelecionado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b7LEwBM5ujVfTqeMI7wWebYV0ho=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FormularioPersonagem","DetalhePersonagem","jsxDEV","_jsxDEV","App","_s","personagens","setPersonagens","personagemSelecionado","setPersonagemSelecionado","loading","setLoading","error","setError","fetchPersonagens","response","fetch","ok","Error","data","json","err","message","handlePersonagemCriado","novoPersonagem","prevPersonagens","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","p","id","onClick","nome_personagem","onPersonagemCriado","ficha","_c","$RefreshReg$"],"sources":["C:/Users/Rafa/Desktop/codigos/gerenciador-de-fichas/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormularioPersonagem from './FormularioPersonagem';\nimport DetalhePersonagem from './DetalhePersonagem';\nimport './App.css';\n\nfunction App() {\n  const [personagens, setPersonagens] = useState([]);\n  const [personagemSelecionado, setPersonagemSelecionado] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 1. Buscar a lista inicial de personagens\n  useEffect(() => {\n    const fetchPersonagens = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/personagens');\n        if (!response.ok) {\n          throw new Error('Não foi possível buscar os dados da API');\n        }\n        const data = await response.json();\n        setPersonagens(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPersonagens();\n  }, []); // O array vazio [] faz isso rodar só uma vez\n\n  // 2. Função para adicionar o novo personagem à lista\n  const handlePersonagemCriado = (novoPersonagem) => {\n    setPersonagens((prevPersonagens) => [...prevPersonagens, novoPersonagem]);\n    setPersonagemSelecionado(novoPersonagem); // Seleciona o recém-criado\n  };\n\n  // 3. Renderização\n  if (error) {\n    return <div className=\"App-container\"><h1>Erro: {error}</h1></div>;\n  }\n\n  return (\n    <div className=\"App-container\">\n      <div className=\"main-layout\">\n        {/* Coluna da Esquerda: Lista e Formulário */}\n        <div className=\"coluna-esquerda\">\n          <div className=\"section lista-personagens\">\n            <h2>Personagens</h2>\n            {loading ? (\n              <p>Carregando lista...</p>\n            ) : (\n              <ul>\n                {personagens.length === 0 && <p>Nenhum personagem criado.</p>}\n                {personagens.map((p) => (\n                  <li\n                    key={p.id}\n                    className={personagemSelecionado?.id === p.id ? 'selecionado' : ''}\n                    onClick={() => setPersonagemSelecionado(p)}\n                  >\n                    {p.nome_personagem}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n          <FormularioPersonagem onPersonagemCriado={handlePersonagemCriado} />\n        </div>\n\n        {/* Coluna da Direita: Detalhes */}\n        <div className=\"coluna-direita\">\n          <DetalhePersonagem ficha={personagemSelecionado} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}